android {
    compileSdk Config.COMPILE_SDK

    defaultConfig {
        minSdk Config.MIN_SDK
        targetSdk Config.TARGET_SDK

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }
    buildTypes {
        staging {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'),
                    "$rootDir/app/proguard-rules.pro",
                    "$rootDir/app/proguard-rules-staging.pro"
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'),
                    "$rootDir/app/proguard-rules.pro"
        }
        setupApplicationBuildTypes(buildTypes)
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
        freeCompilerArgs += ["-opt-in=kotlin.RequiresOptIn"]
    }
    kotlin {
        jvmToolchain(17)
    }
    lint {
        abortOnError false
        checkReleaseBuilds false
        disable 'MissingTranslation', 'ExtraTranslation'
        xmlReport true
    }
    buildFeatures {
        compose = true
    }
    composeOptions {
        kotlinCompilerExtensionVersion = "1.5.1"
    }
    packagingOptions {
        exclude "/META-INF/{AL2.0,LGPL2.1}"
    }
}

def setupApplicationBuildTypes(buildTypes) {
    buildTypes.all { buildType ->
        if (project.plugins.hasPlugin("com.android.application")) {
            if (buildType.name == 'release') {
                buildType.shrinkResources true
            } else {
                buildType.applicationIdSuffix = ".${buildType.name}"
                buildType.versionNameSuffix = "-${buildType.name}"
            }
        }
    }
}

dependencies {
    // Libs
    implementation(libs.bundles.defaultLibs)
    implementation platform(libs.androidx.compose.bom)

    // Tests
    implementation(libs.bundles.defaultTestLibs)

    // AndroidTests
    androidTestImplementation(libs.bundles.defaultAndroidTestLibs)
    androidTestImplementation platform(libs.androidx.compose.bom)
}
